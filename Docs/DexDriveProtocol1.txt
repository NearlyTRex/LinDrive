DexDrive Protocol

The DexDrive is a reasonably simple piece of machinery. It has about a half-dozen basic commands, most of which are pretty meaningless. Every command you send to the DexDrive begins with the letters IAI, for "InterAct Incorporated". This is followed by a command code, and may then be followed by a data parameter. The DexDrive will respond with a similar IAI, response, and potentially a data parameter.

The DexDrive is located by opening the first four serial ports in order, COM1 through COM4, and attempting to detect the DexDrive on that port. If the port cannot be opened, it is assumed that something else is using it. Since only the DexPlorer is supposed to be using the DexDrive, that means no DexDrive is on it, and that port is skipped.

Before you try to detect the DexDrive, you need to set up the serial port. This is a reasonably involved process. First, set up the port to use 4K internal buffers for data transfer, and then clear all pending send and receive operations. Now you need to turn off all flow control completely. If your system performs automatic CR/LF translation, turn that feature off too. The baud rate should be 38400, and the byte format should be 8 bits, no parity, 1 stop bit. After this is done, toggle DSR and RTS on for 200 ms, off for 200 ms, and then back on. Wait another 200 ms before trying to detect the DexDrive.

Detecting the DexDrive is really simple. All you need to do is send some random garbage to the port, and the DexDrive will return an error response "IAI!". The DexPlorer sends "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", but I prefer to send something else just because it doesn't really matter what you send. Lately, I've been sending "JUMP UP MY BUTT" because I think it's really funny when the DexDrive says "IAI!" back. Okay, so I'm easily amused.

After you've gotten an error back from the DexDrive, you need to figure out what kind of DexDrive it is -- PlayStation or N64. This is determined with the NUL command: "IAI\0\0". You can also send some data to the DexDrive with this command, by specifying the length of the data in the second '\0' character -- the DexPlorer uses 0x10 -- and the data itself immediately afterward. The DexPlorer generates sixteen random numbers and sends them to the DexDrive. I don't know why. I don't bother with that. The DexDrive will respond to this command with "IAI@", a status byte I can't figure out, and the string "PSX" or "N64" followed by one more byte of data which is always "D" on my DexDrive but always "F" for everyone else I've talked to. I usually get "IAI@+PSXD", though the '+' changes sometimes and I don't know why.

At this point, the DexPlorer sends "IAI'" ten times and ignores whatever the DexDrive says back. The DexDrive always says "IAI!", which is an error, so I don't know why it does this. I don't do it, and everything works fine.

Finally, you determine whether the DexDrive has a memory card inserted. This is done with the command "IAI" 0x01. The DexDrive will respond with IAI" if there is no memory card, and IAI# if there is. If a memory card is inserted and that memory card has changed since the last time you asked, the IAI# will be followed by the number of blocks on the memory card, which is always 0x10 for standard memory cards.

Some people have told me the DexDrive must be "turned on" with the command "IAI" 0x07 0x01 before you do anything, and turned off with "IAI" 0x07 0x00 when you stop working with it. I've never gotten a non-error response from this, but others tell me I should get the same response I get from "IAI" 0x01. Just to be safe, I send these commands and ignore the DexDrive's response.

The only useful operations on the card are reading and writing the frames on the card. This is done with the two commands 0x02 and 0x04.

To read a frame from the card, simply send the frame number as a 16-bit integer in little-endian byte order.

For frames 0-255, send: IAI 0x02 frame 0x00
For frames 256-511, send: IAI 0x02 frame-256 0x01
For frames 512-767, send: IAI 0x02 frame-512 0x02
For frames 768-1023, send: IAI 0x02 frame-768 0x03

The DexDrive will respond with "IAIA", the 128 bytes of data for that frame, and a sequence number of some sort that I can't figure out. It may have something to do with what you get in the IAI@ response.

To write a frame to the card, things are a bit more complicated. You send the frame number as a 16-bit integer in big-endian byte order, the binary reverse of those two bytes in the same order, the 128 bytes of data, and the standard XOR of all 132 bytes in this series. The DexDrive will respond with "IAI)" if things are fine, and "IAI!" if they're not. So for frame 532, you write:

IAI 0x04 0x02 0x14 0x40 0x28 [128 bytes of data] [XOR]

That's pretty much all there is for the DexDrive. I'm working on a class library that will handle communication with the DexDrive in Windows, but I'm not sure when it will be done.
